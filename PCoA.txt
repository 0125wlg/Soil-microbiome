
# 设置工作目录
setwd("D://桌面////论文//【小论文4】//中间数据1//PCoA计算")

# 加载必要的R包
library(vegan)
library(ggplot2)
library(patchwork)

# 准备数据
# 读取分组信息
groups <- read.csv('D://桌面//论文//【小论文4】//原始数据1//group_info.csv', stringsAsFactors = FALSE)  # 修改为读取CSV文件
colnames(groups) <- c("sample", "group")  # 确保列名正确

# 计算颜色和形状的数量
length <- length(unique(groups$sample))
length1 <- length(unique(groups$group))
times1 <- length %/% 8
res1 <- length %% 8
times2 <- length %/% 5
res2 <- length %% 5

# 定义颜色和形状
mycol <- c(  "#69C1A4","#F88B61" , "#009E73", "#F0E442","#56B4E9", "#0072B2","#B2182B", "#E69F00", "#CC79A7", "#CC6666", "#9999CC", "#99999", "#ADD1E5")
col1 <- rep(mycol, times1)
col <- c(col1, mycol[1:res1])

pich1 <- rep(c(15:18, 20, 7:14, 0:6), times2)
pich <- c(pich1, 15:(15 + res2))

# 图例列数
if (length1 > 30) {
  n <- 2
} else {
  n <- 1
}

# PCoA分析
data <- read.csv('D://桌面//论文//【小论文4】//原始数据1//JTTFActinomycetota.csv', row.names = 1, stringsAsFactors = FALSE)  # 修改为读取CSV文件
data <- t(data)
distance <- vegdist(data, method = 'bray')  # 计算距离
write.csv(as.matrix(distance), 'results/samples_distance.csv', quote = FALSE)


pcoa <- cmdscale(distance, k = 5, eig = TRUE)
points <- data.frame(scores(pcoa))
point <- data.frame(sample = row.names(points), points)
write.csv(point, file = "results/PCoA_coordinates.csv", row.names = FALSE)

pc1 <- round((pcoa$eig / sum(pcoa$eig)) * 100, 2)[1]
pc2 <- round((pcoa$eig / sum(pcoa$eig)) * 100, 2)[2]
colnames(points)[1:2] <- c('dim1', 'dim2')
plotdata <- data.frame(rownames(points), points$dim1, points$dim2, groups$group)
colnames(plotdata) <- c("sample", "dim1", "dim2", "group")

# PERMANOVA分析
adonis_result_dis <- adonis2(distance ~ group, data = groups, permutations = 999)
R2 <- adonis_result_dis$R2[1]
pvalue <- adonis_result_dis$`Pr(>F)`[1]
adonis <- paste("PERMANOVA:\nR2 = ", round(R2, 4), "\nP-value = ", pvalue)


# 绘图 - PCoA主图
plot <- ggplot(plotdata, aes(dim1, dim2)) +
  geom_point(aes(colour = group, shape = group), size = 3) +
  scale_shape_manual(values = pich) +
  scale_colour_manual(values = col) +
  xlab(paste("PCoA axis1 (", pc1, "%)", sep = "")) +
  ylab(paste("PCoA axis2 (", pc2, "%)", sep = "")) +
  theme(plot.title = element_text(hjust = 0.5, size = 16, colour = "black", face = "bold")) +
  geom_vline(xintercept = 0, linetype = "dotted") +
  geom_hline(yintercept = 0, linetype = "dotted") +
  theme(panel.background = element_rect(fill = 'white', colour = 'black'),
        panel.grid = element_blank(),
        axis.title = element_text(color = 'black', family = "times", size = 20),
        axis.text = element_text(colour = 'black', size = 16, margin = unit(0.6, "lines")),
        axis.ticks = element_line(color = 'black'),
        axis.ticks.length = unit(0.4, "lines"),
        legend.title = element_blank(),
        legend.text = element_text(family = "times", size = 14),
        legend.key = element_blank(),
        legend.position = c(0.9, 0.1),
        legend.background = element_rect(colour = "black")) +
  guides(col = guide_legend(ncol = n), shape = guide_legend(ncol = n)) +
  stat_ellipse(aes(x = dim1, y = dim2, color = group), data = plotdata)  # 添加椭圆

plot

# 绘图 - 边缘箱线图
box1 <- ggplot(plotdata, aes(x = group, y = dim1, fill = group)) +
  geom_boxplot(show.legend = FALSE) +
  stat_boxplot(geom = "errorbar", width = 0.1, linewidth = 0.5) +
  geom_jitter(show.legend = FALSE) +
  scale_fill_manual(values = col) +
  coord_flip() +
  theme_bw() +
  theme(panel.grid = element_blank(),
        axis.title = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(color = 'black'),
        axis.text.x = element_blank(),
        axis.text.y = element_text(colour = 'black', size = 16))
box1

box2 <- ggplot(plotdata, aes(x = group, y = dim2, fill = group)) +
  geom_boxplot(show.legend = FALSE) +
  stat_boxplot(geom = "errorbar", width = 0.1, linewidth = 0.5) +
  geom_jitter(show.legend = FALSE) +
  scale_fill_manual(values = col) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        axis.title = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(color = 'black'),
        axis.text.x = element_text(colour = 'black', size = 16, angle = 0, vjust = 1, hjust = 1),
        axis.text.y = element_blank())
#（size大小angle角度）
box2

# 绘图 - PERMANOVA文本标签
adonis <- gsub("R2", "R²", adonis)  # 使用gsub进行替换

box3 <- ggplot(plotdata, aes(dim1, dim2)) +
  annotate("text", x = -0.5, y = 0.6, label = adonis, size = 8, lineheight = 0.8) +  # 调整size和lineheight
  theme_bw() +
  xlab("") + ylab("") +
  theme(panel.grid = element_blank(),
        axis.title = element_blank(),
        axis.line = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_blank())

box3

# 拼图
p <- box1 + box3 + plot + box2 +
  plot_layout(heights = c(1, 4), widths = c(4, 1), ncol = 2, nrow = 2)

# 显示图形
print(p)



# 使用 ggsave() 保存图表
ggsave("放线菌.png", plot = p, width =5, height =5, dpi = 300)
